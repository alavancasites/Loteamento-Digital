<?php

/**
 * This is the model base class for the table "arquivo".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Arquivo".
 *
 * Columns in table "arquivo" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $idarquivo
 * @property string $data
 * @property string $titulo
 * @property string $arquivo
 *
 */
abstract class BaseArquivo extends GxActiveRecord {



	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'arquivo';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Arquivo|Arquivos', $n);
	}

	public static function representingColumn() {
		return array('titulo');
	}

	public function rules() {
		return array(
			array('idarquivo_categoria, idcliente', 'numerical', 'integerOnly'=>true),
			array('titulo', 'length', 'max'=>100),
			array('arquivo', 'length', 'max'=>140),
			array('data', 'safe'),
			array('data, titulo, arquivo,idarquivo_categoria, idcliente', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idarquivo, data, titulo, arquivo,idarquivo_categoria, idcliente', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'categoria' => array(self::BELONGS_TO, 'ArquivoCategoria', 'idarquivo_categoria'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idarquivo' => Yii::t('app', 'Idarquivo'),
			'data' => Yii::t('app', 'Data'),
			'titulo' => Yii::t('app', 'Título'),
			'arquivo' => Yii::t('app', 'Arquivo'),
			'idarquivo_categoria'=>Yii::t('app','Categoria'),
			'idcliente' => Yii::t('app', 'Cliente'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idarquivo', $this->idarquivo);
		$criteria->compare('idarquivo_categoria', $this->idarquivo_categoria);
		$criteria->compare('data', $this->data, true);
		$criteria->compare('titulo', $this->titulo, true);
		$criteria->compare('arquivo', $this->arquivo, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
