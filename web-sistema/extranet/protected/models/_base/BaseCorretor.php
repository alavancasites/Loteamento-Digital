<?php

/**
* This is the model base class for the table "corretor".
* DO NOT MODIFY THIS FILE! It is automatically generated by giix.
* If any changes are necessary, you must set or override the required
* property or method in class "Corretor".
*
* Columns in table "corretor" available as properties of the model,
* followed by relations of table "corretor" available as properties of the model.
*
* @property integer $idcorretor
* @property string $nome
* @property string $email
* @property string $cpf_cnpj
* @property string $registro
* @property string $telefone
* @property string $senha
* @property string $ativo
*
* @property HistoricoReserva[] $historicoReservas
*/
abstract class BaseCorretor extends GxActiveRecord {

    public $senha_confirma;

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'corretor';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'Corretor|Corretores', $n);
    }

    public static function representingColumn() {
        return array('nome');
    }

    public function rules() {
        return array(
            array('nome, email, cpf_cnpj, registro, telefone', 'required'),
            array('email', 'email'),

            array('senha, senha_confirma','required', 'on'=>'insert'),
            array('senha','compare', 'compareAttribute'=>'senha_confirma', 'message'=> Yii::t('app','As senhas informadas são diferentes')),

            array('cpf_cnpj', 'ext.cpf-cnpj-validator.CPFCNPJValidator'),
            array('cpf_cnpj', 'unique'),
            array('nome, email, cpf_cnpj, registro, telefone, senha, senha_confirma', 'length', 'max'=>100),
            array('ativo', 'length', 'max'=>1),
            array('nome, email, cpf_cnpj, registro, telefone, senha, senha_confirma, ativo', 'default', 'setOnEmpty' => true, 'value' => null),
            array('idcorretor, nome, email, cpf_cnpj, registro, telefone, senha, senha_confirma, ativo', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'historicoReservas' => array(self::HAS_MANY, 'HistoricoReserva', 'idcorretor'),
            'clientes' => array(self::HAS_MANY, 'CorretorCliente', 'idcorretor'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'idcorretor' => Yii::t('app', 'Idcorretor'),
            'nome' => Yii::t('app', 'Nome'),
            'email' => Yii::t('app', 'E-mail'),
            'cpf_cnpj' => Yii::t('app', 'CPF/CNPJ'),
            'registro' => Yii::t('app', 'CRECI'),
            'telefone' => Yii::t('app', 'Telefone'),
            'senha' => Yii::t('app', 'Senha'),
            'senha_confirma' => Yii::t('app', 'Confirme a Senha'),
            'ativo' => Yii::t('app', 'Ativo'),
            'historicoReservas' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('idcorretor', $this->idcorretor);
        $criteria->compare('nome', $this->nome, true);
        $criteria->compare('email', $this->email, true);
        $criteria->compare('cpf_cnpj', $this->cpf_cnpj, true);
        $criteria->compare('registro', $this->registro, true);
        $criteria->compare('telefone', $this->telefone, true);
        $criteria->compare('senha', $this->senha, true);
        $criteria->compare('ativo', $this->ativo, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}
