<?php

/**
 * This is the model base class for the table "contato".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Contato".
 *
 * Columns in table "contato" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $idcontato
 * @property string $data
 * @property string $ip
 * @property string $nome
 * @property string $email
 * @property string $telefone
 * @property string $assunto
 * @property string $mensagem
 * @property string $ativo
 * @property integer $idempreendimento
 *
 */
abstract class BaseContato extends GxActiveRecord {



	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'contato';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Contato|Contatos', $n);
	}

	public static function representingColumn() {
		return array('nome');
	}

	public function rules() {
		return array(
			array('nome, email, telefone, assunto, mensagem', 'required'),
			array('email', 'email'),
			array('idempreendimento, idcliente', 'numerical', 'integerOnly'=>true),
			array('ip, nome, email, telefone, assunto', 'length', 'max'=>100),
			array('ativo', 'length', 'max'=>1),
			array('data, mensagem', 'safe'),
			array('data, ip, nome, email, telefone, assunto, mensagem, ativo, idempreendimento, idcliente', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idcontato, data, ip, nome, email, telefone, assunto, mensagem, ativo, idempreendimento, idcliente', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'empreendimento' => array(self::BELONGS_TO, 'Empreendimento', 'idempreendimento'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idcontato' => Yii::t('app', 'Idcontato'),
			'data' => Yii::t('app', 'Data'),
			'ip' => Yii::t('app', 'Ip'),
			'nome' => Yii::t('app', 'Nome'),
			'email' => Yii::t('app', 'Email'),
			'telefone' => Yii::t('app', 'Telefone'),
			'assunto' => Yii::t('app', 'Assunto'),
			'mensagem' => Yii::t('app', 'Mensagem'),
			'ativo' => Yii::t('app', 'Ativo'),
			'idempreendimento' => Yii::t('app', 'Idempreendimento'),
			'idcliente' => Yii::t('app', 'Cliente'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idcontato', $this->idcontato);
		$criteria->compare('data', $this->data, true);
		$criteria->compare('ip', $this->ip, true);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('telefone', $this->telefone, true);
		$criteria->compare('assunto', $this->assunto, true);
		$criteria->compare('mensagem', $this->mensagem, true);
		$criteria->compare('ativo', $this->ativo, true);
		$criteria->compare('idempreendimento', $this->idempreendimento);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
