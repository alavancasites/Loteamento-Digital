<?php

/**
 * This is the model base class for the table "corretor_recupera_senha".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CorretorRecuperaSenha".
 *
 * Columns in table "corretor_recupera_senha" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $idcorretor_recupera_senha
 * @property string $habilitar
 * @property string $ip
 * @property string $data_solicitacao
 * @property integer $idusuario
 * @property string $email
 * @property string $token
 * @property string $data_validade
 * @property string $utilizado
 * @property string $utilizado_ip
 * @property string $utilizado_data
 *
 */
abstract class BaseCorretorRecuperaSenha extends GxActiveRecord {



	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'corretor_recupera_senha';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'CorretorRecuperaSenha|CorretorRecuperaSenhas', $n);
	}

	public static function representingColumn() {
		return array('habilitar');
	}

	public function rules() {
		return array(
			array('idusuario', 'numerical', 'integerOnly'=>true),
			array('habilitar, utilizado', 'length', 'max'=>1),
			array('ip, email, token, utilizado_ip', 'length', 'max'=>100),
			array('data_solicitacao, data_validade, utilizado_data', 'safe'),
			array('habilitar, ip, data_solicitacao, idusuario, email, token, data_validade, utilizado, utilizado_ip, utilizado_data', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idcorretor_recupera_senha, habilitar, ip, data_solicitacao, idusuario, email, token, data_validade, utilizado, utilizado_ip, utilizado_data', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'corretor' => array(self::BELONGS_TO, 'Corretor', 'idusuario'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idcorretor_recupera_senha' => Yii::t('app', 'Idcorretor Recupera Senha'),
			'habilitar' => Yii::t('app', 'Habilitar'),
			'ip' => Yii::t('app', 'Ip'),
			'data_solicitacao' => Yii::t('app', 'Data Solicitacao'),
			'idusuario' => Yii::t('app', 'Idusuario'),
			'email' => Yii::t('app', 'Email'),
			'token' => Yii::t('app', 'Token'),
			'data_validade' => Yii::t('app', 'Data Validade'),
			'utilizado' => Yii::t('app', 'Utilizado'),
			'utilizado_ip' => Yii::t('app', 'Utilizado Ip'),
			'utilizado_data' => Yii::t('app', 'Utilizado Data'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idcorretor_recupera_senha', $this->idcorretor_recupera_senha);
		$criteria->compare('habilitar', $this->habilitar, true);
		$criteria->compare('ip', $this->ip, true);
		$criteria->compare('data_solicitacao', $this->data_solicitacao, true);
		$criteria->compare('idusuario', $this->idusuario);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('token', $this->token, true);
		$criteria->compare('data_validade', $this->data_validade, true);
		$criteria->compare('utilizado', $this->utilizado, true);
		$criteria->compare('utilizado_ip', $this->utilizado_ip, true);
		$criteria->compare('utilizado_data', $this->utilizado_data, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
