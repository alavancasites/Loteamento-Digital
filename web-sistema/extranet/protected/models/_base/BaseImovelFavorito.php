<?php

/**
 * This is the model base class for the table "imovel_favorito".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ImovelFavorito".
 *
 * Columns in table "imovel_favorito" available as properties of the model,
 * followed by relations of table "imovel_favorito" available as properties of the model.
 *
 * @property integer $idimovel_favorito
 * @property string $data
 * @property integer $idcorretor
 * @property integer $idimovel
 * @property string $ativo
 *
 * @property Corretor $corretor
 * @property Imovel $imovel
 */
abstract class BaseImovelFavorito extends GxActiveRecord {



	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'imovel_favorito';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ImovelFavorito|ImovelFavoritos', $n);
	}

	public static function representingColumn() {
		return array('data');
	}

	public function rules() {
		return array(
			array('idcorretor, idcliente, idimovel', 'numerical', 'integerOnly'=>true),
			array('ativo', 'length', 'max'=>1),
			array('data', 'safe'),
			array('data, idcorretor, idcliente, idimovel, ativo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idimovel_favorito, data, idcorretor, idcliente, idimovel, ativo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'corretor' => array(self::BELONGS_TO, 'Corretor', 'idcorretor'),
			'imovel' => array(self::BELONGS_TO, 'Imovel', 'idimovel'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idimovel_favorito' => Yii::t('app', 'Idimovel Favorito'),
			'data' => Yii::t('app', 'Data'),
			'idcorretor' => null,
			'idimovel' => null,
			'ativo' => Yii::t('app', 'Ativo'),
			'corretor' => null,
			'imovel' => null,
			'idcliente' => Yii::t('app', 'Cliente'),
			
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idimovel_favorito', $this->idimovel_favorito);
		$criteria->compare('data', $this->data, true);
		$criteria->compare('idcorretor', $this->idcorretor);
		$criteria->compare('idimovel', $this->idimovel);
		$criteria->compare('ativo', $this->ativo, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
