<?php

/**
 * This is the model base class for the table "user_cliente".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserCliente".
 *
 * Columns in table "user_cliente" available as properties of the model,
 * followed by relations of table "user_cliente" available as properties of the model.
 *
 * @property integer $iduser_cliente
 * @property integer $idUser
 * @property integer $idcliente
 * @property string $ativo
 *
 * @property Cliente $cliente
 * @property User $user
 */
abstract class BaseUserCliente extends GxActiveRecord {
	
    
        
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_cliente';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserCliente|UserClientes', $n);
	}

	public static function representingColumn() {
		return array('ativo');
	}

	public function rules() {
		return array(
			array('idUser, idcliente', 'required'),
			array('idUser, idcliente', 'numerical', 'integerOnly'=>true),
			array('ativo', 'length', 'max'=>1),
			array('ativo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('iduser_cliente, idUser, idcliente, ativo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'cliente' => array(self::BELONGS_TO, 'Cliente', 'idcliente'),
			'user' => array(self::BELONGS_TO, 'User', 'idUser'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'iduser_cliente' => Yii::t('app', 'Iduser Cliente'),
			'idUser' => null,
			'idcliente' => null,
			'ativo' => Yii::t('app', 'Ativo'),
			'cliente' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('iduser_cliente', $this->iduser_cliente);
		$criteria->compare('idUser', $this->idUser);
		$criteria->compare('idcliente', $this->idcliente);
		$criteria->compare('ativo', $this->ativo, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}