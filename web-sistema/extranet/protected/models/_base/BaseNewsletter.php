<?php

/**
 * This is the model base class for the table "newsletter".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Newsletter".
 *
 * Columns in table "newsletter" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $idnewsletter
 * @property string $data
 * @property string $ip
 * @property string $nome
 * @property string $email
 * @property string $telefone
 * @property integer $idestado
 * @property integer $idcidade
 * @property string $assunto
 * @property string $mensagem
 * @property string $ativo
 * @property string $departamento
 *
 */
abstract class BaseNewsletter extends GxActiveRecord {



	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'newsletter';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Newsletter|Newsletters', $n);
	}

	public static function representingColumn() {
		return array('nome');
	}

	public function rules() {
		return array(
			array('idestado, idcidade, idcliente', 'numerical', 'integerOnly'=>true),
			array('ip, nome, email, telefone, assunto, departamento', 'length', 'max'=>100),
			array('ativo', 'length', 'max'=>1),
			array('data, mensagem', 'safe'),
			array('nome, email, telefone, departamento, mensagem', 'required'),
			array('data, ip, nome, email, telefone, idestado, idcidade, idcliente, assunto, mensagem, ativo, departamento', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idnewsletter, data, ip, nome, email, telefone, idestado, idcidade, idcliente, assunto, mensagem, ativo, departamento', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idnewsletter' => Yii::t('app', 'Idnewsletter'),
			'data' => Yii::t('app', 'Data'),
			'ip' => Yii::t('app', 'Ip'),
			'nome' => Yii::t('app', 'Name'),
			'email' => Yii::t('app', 'Email'),
			'telefone' => Yii::t('app', 'Phone'),
			'idestado' => Yii::t('app', 'Idestado'),
			'idcidade' => Yii::t('app', 'Idcidade'),
			'assunto' => Yii::t('app', 'Subject'),
			'mensagem' => Yii::t('app', 'Message'),
			'ativo' => Yii::t('app', 'Active'),
			'departamento' => Yii::t('app', 'Departament'),
			'idcliente' => Yii::t('app', 'Cliente'),
			
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idnewsletter', $this->idnewsletter);
		$criteria->compare('data', $this->data, true);
		$criteria->compare('ip', $this->ip, true);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('telefone', $this->telefone, true);
		$criteria->compare('idestado', $this->idestado);
		$criteria->compare('idcidade', $this->idcidade);
		$criteria->compare('assunto', $this->assunto, true);
		$criteria->compare('mensagem', $this->mensagem, true);
		$criteria->compare('departamento', $this->departamento, true);
		$criteria->compare('ativo', $this->ativo, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

	public function afterSave(){
		$newsletter = Newsletter::model()->findByPk($this->idnewsletter);
		$messageOK = new YiiMailMessage;
		$messageOK->view = 'newsletter';
		$messageOK->setBody(array('newsletter' => $newsletter),'text/html','latin1');

		$messageOK->subject = 'Newsletter recebido'.' - '.date('d/m/Y H:i:s');
		$messageOK->setFrom(array('contact@dinamacindustry.com'  => Yii::app()->name));
		$messageOK->setReplyTo('contact@dinamacindustry.com');

		$messageOK->setTo(Yii::app()->params['email_newsletter']);
		//$messageOK->addTo('');

		if ($newsletter->departamento == 'vendas' ){
			$messageOK->addTo('sales@dinamacindustry.com');
		}

		if ($newsletter->departamento == 'assistencia' ){
			$messageOK->addTo('sales@dinamacindustry.com');
		}

		if ($newsletter->departamento == 'treinamento' ){
			$messageOK->addTo('sales@dinamacindustry.com');
		}

		if ($newsletter->departamento == 'trabalhe' ){
			$messageOK->addTo('sales@dinamacindustry.com');
		}

		if ($newsletter->departamento == 'outros' ){
			$messageOK->addTo('sales@dinamacindustry.com');
		}

		$messageOK->setBcc(array(
			'eliel@dinamacindustria.com.br',
			'guilherme@dinamacindustria.com.br',
		));
		Yii::app()->mail->send($messageOK);
	}

}
